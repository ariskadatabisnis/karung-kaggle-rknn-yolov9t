{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.13"},"kaggle":{"accelerator":"gpu","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Install required libraries\n!pip install ultralytics gdown","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:22:11.968993Z","iopub.execute_input":"2025-09-19T04:22:11.969800Z","iopub.status.idle":"2025-09-19T04:22:15.365584Z","shell.execute_reply.started":"2025-09-19T04:22:11.969772Z","shell.execute_reply":"2025-09-19T04:22:15.364800Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: ultralytics in /usr/local/lib/python3.11/dist-packages (8.3.202)\nRequirement already satisfied: gdown in /usr/local/lib/python3.11/dist-packages (5.2.0)\nRequirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.26.4)\nRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (3.7.2)\nRequirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (4.11.0.86)\nRequirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (11.2.1)\nRequirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (6.0.2)\nRequirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.32.4)\nRequirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.15.3)\nRequirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.6.0+cu124)\nRequirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (0.21.0+cu124)\nRequirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ultralytics) (7.0.0)\nRequirement already satisfied: polars in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.21.0)\nRequirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.0.17)\nRequirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from gdown) (4.13.4)\nRequirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from gdown) (3.18.0)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from gdown) (4.67.1)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.2)\nRequirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.58.4)\nRequirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.8)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (25.0)\nRequirement already satisfied: pyparsing<3.1,>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.0.9)\nRequirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2.4.1)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2025.6.15)\nRequirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (4.14.0)\nRequirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.5)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.1.6)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2025.5.1)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (9.1.0.70)\nRequirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.5.8)\nRequirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (11.2.1.3)\nRequirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (10.3.5.147)\nRequirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (11.6.1.9)\nRequirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.3.1.170)\nRequirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (0.6.2)\nRequirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2.21.5)\nRequirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.2.0)\nRequirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (1.13.1)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.8.0->ultralytics) (1.3.0)\nRequirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->gdown) (2.7)\nRequirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (1.7.1)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.0->ultralytics) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy>=1.23.0->ultralytics) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy>=1.23.0->ultralytics) (2024.2.0)\n","output_type":"stream"}],"execution_count":20},{"cell_type":"code","source":"\n# Import necessary libraries\nfrom ultralytics import YOLO\nimport os\nimport zipfile\nimport gdown","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:22:15.367595Z","iopub.execute_input":"2025-09-19T04:22:15.367820Z","iopub.status.idle":"2025-09-19T04:22:15.371984Z","shell.execute_reply.started":"2025-09-19T04:22:15.367801Z","shell.execute_reply":"2025-09-19T04:22:15.371397Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"# Download dataset from Google Drive https://drive.google.com/file/d/1QKwJnPVQyZtIjTzfHj5ZnXqtU0WeodtG/view?usp=sharing\ngoogle_drive_url = \"https://drive.google.com/uc?id=1QKwJnPVQyZtIjTzfHj5ZnXqtU0WeodtG\"\ndataset_zip_path = \"/kaggle/working/dataset-yolov9.zip\"\nextracted_dataset_path = \"/kaggle/working/dataset-yolov9\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:22:15.372743Z","iopub.execute_input":"2025-09-19T04:22:15.373101Z","iopub.status.idle":"2025-09-19T04:22:15.391604Z","shell.execute_reply.started":"2025-09-19T04:22:15.373083Z","shell.execute_reply":"2025-09-19T04:22:15.391058Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"# Download the zip file\ngdown.download(google_drive_url, dataset_zip_path, quiet=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:22:15.392508Z","iopub.execute_input":"2025-09-19T04:22:15.392768Z","iopub.status.idle":"2025-09-19T04:23:43.146173Z","shell.execute_reply.started":"2025-09-19T04:22:15.392745Z","shell.execute_reply":"2025-09-19T04:23:43.145351Z"}},"outputs":[{"name":"stderr","text":"Downloading...\nFrom (original): https://drive.google.com/uc?id=1QKwJnPVQyZtIjTzfHj5ZnXqtU0WeodtG\nFrom (redirected): https://drive.google.com/uc?id=1QKwJnPVQyZtIjTzfHj5ZnXqtU0WeodtG&confirm=t&uuid=993d0f5e-85db-4722-8dba-1caab61dfb72\nTo: /kaggle/working/dataset-yolov9.zip\n100%|██████████| 6.12G/6.12G [01:24<00:00, 72.2MB/s]\n","output_type":"stream"},{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/dataset-yolov9.zip'"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"# Create directory for extracted dataset\nos.makedirs(extracted_dataset_path, exist_ok=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:23:43.148329Z","iopub.execute_input":"2025-09-19T04:23:43.148990Z","iopub.status.idle":"2025-09-19T04:23:43.153050Z","shell.execute_reply.started":"2025-09-19T04:23:43.148959Z","shell.execute_reply":"2025-09-19T04:23:43.152465Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"# Extract the dataset\nwith zipfile.ZipFile(dataset_zip_path, 'r') as zip_ref:\n    zip_ref.extractall(extracted_dataset_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:23:43.153696Z","iopub.execute_input":"2025-09-19T04:23:43.153973Z","iopub.status.idle":"2025-09-19T04:24:25.158361Z","shell.execute_reply.started":"2025-09-19T04:23:43.153951Z","shell.execute_reply":"2025-09-19T04:24:25.157502Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"# Verify dataset structure\nprint(\"Dataset extracted to:\", extracted_dataset_path)\n!ls {extracted_dataset_path}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:24:25.159263Z","iopub.execute_input":"2025-09-19T04:24:25.159488Z","iopub.status.idle":"2025-09-19T04:24:25.375090Z","shell.execute_reply.started":"2025-09-19T04:24:25.159471Z","shell.execute_reply":"2025-09-19T04:24:25.374109Z"}},"outputs":[{"name":"stdout","text":"Dataset extracted to: /kaggle/working/dataset-yolov9\nyolov9-karung\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"\n# Update data.yaml paths (if necessary)\n#data_yaml_path = os.path.join(extracted_dataset_path, '/yolov9-karung/data.yaml')\ndata_yaml_path = '/kaggle/working/dataset-yolov9/yolov9-karung/data.yaml'\n# Optional: If data.yaml contains relative paths, ensure they are correct\n# For example, update paths to point to /kaggle/working/dataset-yolov8/train, etc.\n# This step depends on the dataset structure; you may need to inspect data.yaml \n\n# Load the pre-trained model\nmodel = YOLO('/kaggle/working/runs/detect/karung_yolov9t3/weights/last.pt')\n#model = YOLO('/kaggle/working/karung_yolov9t_last.pt')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:24:25.376341Z","iopub.execute_input":"2025-09-19T04:24:25.376706Z","iopub.status.idle":"2025-09-19T04:24:25.767281Z","shell.execute_reply.started":"2025-09-19T04:24:25.376684Z","shell.execute_reply":"2025-09-19T04:24:25.766544Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"# Training run\nresults = model.train(\n    data=data_yaml_path,  # Path to extracted data.yaml\n    epochs=25,  # Reduced for faster iteration\n    imgsz=320,  # Lower resolution to save memory\n    batch=128,   # Adjusted for T4x2 (16 per GPU)\n    name='karung_yolov9t',\n    patience=15,\n    device=0,\n    workers=4,\n    optimizer='AdamW',\n    lr0=0.0005,  # Slightly lower for stability\n    lrf=0.01,    # Final LR factor\n    momentum=0.937,\n    weight_decay=0.0005,\n    warmup_epochs=3,\n    cos_lr=True,  # Cosine scheduling for smoother convergence\n    amp=True,\n    dfl=1.0,     # Keep for distribution focal loss\n    close_mosaic=10,  # Refine final epochs\n    plots=True   # Visualize PR curves for FP monitoring\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T04:24:25.768120Z","iopub.execute_input":"2025-09-19T04:24:25.768401Z"}},"outputs":[{"name":"stdout","text":"Ultralytics 8.3.202 🚀 Python-3.11.13 torch-2.6.0+cu124 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0magnostic_nms=False, amp=True, augment=False, auto_augment=randaugment, batch=128, bgr=0.0, box=7.5, cache=False, cfg=None, classes=None, close_mosaic=10, cls=0.5, compile=False, conf=None, copy_paste=0.0, copy_paste_mode=flip, cos_lr=True, cutmix=0.0, data=/kaggle/working/dataset-yolov9/yolov9-karung/data.yaml, degrees=0.0, deterministic=True, device=0, dfl=1.0, dnn=False, dropout=0.0, dynamic=False, embed=None, epochs=25, erasing=0.4, exist_ok=False, fliplr=0.5, flipud=0.0, format=torchscript, fraction=1.0, freeze=None, half=False, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, imgsz=320, int8=False, iou=0.7, keras=False, kobj=1.0, line_width=None, lr0=0.0005, lrf=0.01, mask_ratio=4, max_det=300, mixup=0.0, mode=train, model=/kaggle/working/runs/detect/karung_yolov9t3/weights/last.pt, momentum=0.937, mosaic=1.0, multi_scale=False, name=karung_yolov9t4, nbs=64, nms=False, opset=None, optimize=False, optimizer=AdamW, overlap_mask=True, patience=15, perspective=0.0, plots=True, pose=12.0, pretrained=True, profile=False, project=None, rect=False, resume=False, retina_masks=False, save=True, save_conf=False, save_crop=False, save_dir=/kaggle/working/runs/detect/karung_yolov9t4, save_frames=False, save_json=False, save_period=-1, save_txt=False, scale=0.5, seed=0, shear=0.0, show=False, show_boxes=True, show_conf=True, show_labels=True, simplify=True, single_cls=False, source=None, split=val, stream_buffer=False, task=detect, time=None, tracker=botsort.yaml, translate=0.1, val=True, verbose=True, vid_stride=1, visualize=False, warmup_bias_lr=0.1, warmup_epochs=3, warmup_momentum=0.8, weight_decay=0.0005, workers=4, workspace=None\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n  2                  -1  1      7872  ultralytics.nn.modules.block.ELAN1           [32, 32, 32, 16]              \n  3                  -1  1     18560  ultralytics.nn.modules.block.AConv           [32, 64]                      \n  4                  -1  1     65216  ultralytics.nn.modules.block.RepNCSPELAN4    [64, 64, 64, 32, 3]           \n  5                  -1  1     55488  ultralytics.nn.modules.block.AConv           [64, 96]                      \n  6                  -1  1    145824  ultralytics.nn.modules.block.RepNCSPELAN4    [96, 96, 96, 48, 3]           \n  7                  -1  1    110848  ultralytics.nn.modules.block.AConv           [96, 128]                     \n  8                  -1  1    258432  ultralytics.nn.modules.block.RepNCSPELAN4    [128, 128, 128, 64, 3]        \n  9                  -1  1     41344  ultralytics.nn.modules.block.SPPELAN         [128, 128, 64]                \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 12                  -1  1    158112  ultralytics.nn.modules.block.RepNCSPELAN4    [224, 96, 96, 48, 3]          \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 15                  -1  1     71360  ultralytics.nn.modules.block.RepNCSPELAN4    [160, 64, 64, 32, 3]          \n 16                  -1  1     27744  ultralytics.nn.modules.block.AConv           [64, 48]                      \n 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 18                  -1  1    150432  ultralytics.nn.modules.block.RepNCSPELAN4    [144, 96, 96, 48, 3]          \n 19                  -1  1     55424  ultralytics.nn.modules.block.AConv           [96, 64]                      \n 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 21                  -1  1    266624  ultralytics.nn.modules.block.RepNCSPELAN4    [192, 128, 128, 64, 3]        \n 22        [15, 18, 21]  1    567187  ultralytics.nn.modules.head.Detect           [1, [64, 96, 128]]            \nYOLOv9t summary: 544 layers, 2,005,603 parameters, 2,005,587 gradients, 7.8 GFLOPs\n\nTransferred 1339/1339 items from pretrained weights\nFreezing layer 'model.22.dfl.conv.weight'\n\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n\u001b[34m\u001b[1mtrain: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 2068.7±522.7 MB/s, size: 197.1 KB)\n\u001b[K\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/dataset-yolov9/yolov9-karung/train/labels.cache... 29992 images, 7168 backgrounds, 0 corrupt: 100% ━━━━━━━━━━━━ 29992/29992 36.7Mit/s 0.0s\nWARNING ⚠️ Box and segment counts should be equal, but got len(segments) = 538, len(boxes) = 23238. To resolve this only boxes will be used and all segments will be removed. To avoid this please supply either a detect or segment dataset, not a detect-segment mixed dataset.\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n\u001b[34m\u001b[1mval: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 733.0±545.5 MB/s, size: 222.1 KB)\n\u001b[K\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/dataset-yolov9/yolov9-karung/valid/labels.cache... 4447 images, 1436 backgrounds, 0 corrupt: 100% ━━━━━━━━━━━━ 4447/4447 3.1Mit/s 0.0s0s\nWARNING ⚠️ Box and segment counts should be equal, but got len(segments) = 96, len(boxes) = 3085. To resolve this only boxes will be used and all segments will be removed. To avoid this please supply either a detect or segment dataset, not a detect-segment mixed dataset.\nPlotting labels to /kaggle/working/runs/detect/karung_yolov9t4/labels.jpg... \n\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.0005, momentum=0.937) with parameter groups 221 weight(decay=0.0), 228 weight(decay=0.001), 227 bias(decay=0.0)\nImage sizes 320 train, 320 val\nUsing 4 dataloader workers\nLogging results to \u001b[1m/kaggle/working/runs/detect/karung_yolov9t4\u001b[0m\nStarting training for 25 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       1/25      5.74G     0.9467     0.5279     0.7005         62        320: 100% ━━━━━━━━━━━━ 235/235 1.4it/s 2:48<0.6s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.1it/s 16.4s0.8s\n                   all       4447       3085      0.944      0.941       0.97      0.767\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       2/25      6.62G     0.9189     0.5025     0.6916         53        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:29<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.2it/s 14.8s0.7s\n                   all       4447       3085      0.949       0.95      0.974      0.771\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       3/25      6.62G     0.9233     0.5079     0.6928         54        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:29<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.2it/s 14.6s0.6s\n                   all       4447       3085      0.956      0.957      0.985      0.789\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       4/25      6.62G      0.918     0.5016     0.6914         56        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:27<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.2it/s 15.6s0.7s\n                   all       4447       3085       0.96       0.96      0.984       0.79\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       5/25      6.62G     0.9075     0.4936     0.6886         55        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:27<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.2it/s 14.6s0.8s\n                   all       4447       3085      0.953      0.959      0.984      0.792\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       6/25      6.62G     0.8998     0.4816     0.6843         51        320: 100% ━━━━━━━━━━━━ 235/235 1.5it/s 2:32<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.1it/s 16.0s0.7s\n                   all       4447       3085      0.959      0.975      0.986      0.795\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       7/25      6.62G     0.8888     0.4767     0.6828         59        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:30<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.3it/s 14.0s0.7s\n                   all       4447       3085      0.952      0.974      0.984      0.813\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       8/25      6.62G     0.8824     0.4701     0.6804         53        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:31<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.1it/s 16.2s0.8s\n                   all       4447       3085      0.957      0.961      0.983      0.798\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K       9/25      6.62G     0.8703     0.4616     0.6763         57        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:28<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.3it/s 13.8s0.6s\n                   all       4447       3085       0.95      0.974      0.985      0.817\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      10/25      6.62G     0.8694     0.4562     0.6759         70        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:26<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.3it/s 13.9s0.6s\n                   all       4447       3085      0.955      0.978      0.987      0.816\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      11/25      6.62G     0.8527     0.4468     0.6722         58        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:25<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.3it/s 14.3s0.6s\n                   all       4447       3085      0.953      0.976      0.986      0.821\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      12/25      6.62G     0.8386     0.4359     0.6685         69        320: 100% ━━━━━━━━━━━━ 235/235 1.6it/s 2:26<0.5s\n\u001b[K                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100% ━━━━━━━━━━━━ 18/18 1.3it/s 14.3s0.7s\n                   all       4447       3085      0.958      0.969      0.986      0.819\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n\u001b[K      13/25      6.62G     0.8516     0.4411     0.6732        185        320: 9% ━─────────── 20/235 1.6it/s 12.8s<2:10","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":"# Save the fine-tuned model\nmodel.save('/kaggle/working/karung_yolov9t_best.pt')\nmodel.save('/kaggle/working/karung_yolov9t_last.pt')\nmodel.save('/kaggle/working/karung_yolov9t_best.onnx')","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Validate the model\nmetrics = model.val()\nprint(\"Validation metrics:\", metrics)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model = YOLO('/kaggle/working/karung_yolov9t_last.pt')","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Training run\nresults = model.train(\n    data=data_yaml_path,  # Path to extracted data.yaml\n    epochs=25,  # Reduced for faster iteration\n    imgsz=320,  # Lower resolution to save memory\n    batch=128,   # Adjusted for T4x2 (16 per GPU)\n    name='karung_yolov9t',\n    patience=15,\n    device=0,\n    workers=4,\n    optimizer='AdamW',\n    lr0=0.0005,  # Slightly lower for stability\n    lrf=0.01,    # Final LR factor\n    momentum=0.937,\n    weight_decay=0.0005,\n    warmup_epochs=3,\n    cos_lr=True,  # Cosine scheduling for smoother convergence\n    amp=True,\n    dfl=1.0,     # Keep for distribution focal loss\n    close_mosaic=10,  # Refine final epochs\n    plots=True   # Visualize PR curves for FP monitoring\n)\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Save the fine-tuned model\nmodel.save('/kaggle/working/karung_yolov9t_best2.pt')\nmodel.save('/kaggle/working/karung_yolov9t_last2.pt')\nmodel.save('/kaggle/working/karung_yolov9t_best2.onnx')","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Validate the model\nmetrics = model.val()\nprint(\"Validation metrics:\", metrics)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model = YOLO('/kaggle/working/karung_yolov9t_last2.pt')","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Training run\nresults = model.train(\n    data=data_yaml_path,  # Path to extracted data.yaml\n    epochs=25,  # Reduced for faster iteration\n    imgsz=320,  # Lower resolution to save memory\n    batch=128,   # Adjusted for T4x2 (16 per GPU)\n    name='karung_yolov9t',\n    patience=15,\n    device=0,\n    workers=4,\n    optimizer='AdamW',\n    lr0=0.0005,  # Slightly lower for stability\n    lrf=0.01,    # Final LR factor\n    momentum=0.937,\n    weight_decay=0.0005,\n    warmup_epochs=3,\n    cos_lr=True,  # Cosine scheduling for smoother convergence\n    amp=True,\n    dfl=1.0,     # Keep for distribution focal loss\n    close_mosaic=10,  # Refine final epochs\n    plots=True   # Visualize PR curves for FP monitoring\n)\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.save('/kaggle/working/karung_yolov9t_best.pt')\nmodel.save('/kaggle/working/karung_yolov9t_last.pt')\nmodel.save('/kaggle/working/karung_yolov9t_best.onnx')","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Validate the model\nmetrics = model.val()\nprint(\"Validation metrics:\", metrics)","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}